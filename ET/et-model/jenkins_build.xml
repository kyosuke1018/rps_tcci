<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".">
<!-- buildinfo -->
    <target name="buildinfo">
        <tstamp>
            <format property="current.time" pattern="yyyy/MM/dd HH:mm:ss"/>
        </tstamp>
        <property environment="env"/>
        <echo file="web/buildinfo.txt" append="false">BUILD_TIME=${current.time}
BUILD_NUMBER=${env.BUILD_NUMBER}
BUILD_ID=${env.BUILD_ID}
SVN_REVISION=${env.SVN_REVISION}
COMPUTERNAME=${env.COMPUTERNAME}
USERNAME=${env.USERNAME}
JAVA_VERSION=${java.version}
</echo>
    </target>
    <!--
    <property name="checkstyle.home" value="D:/OpenSourceAP/checkstyle-5.6"/>
    <property name="findbugs.home" value="D:/OpenSourceAP/findbugs-2.0.1"/>
    <property name="pmd.home" value="D:/OpenSourceAP/pmd-bin-5.0.2"/>
    -->
    <path id="checkstyle.lib">
        <fileset dir="${checkstyle.home}" includes="*.jar" />
    </path>
    <path id="findbugs.lib">
        <fileset dir="${findbugs.home}" includes="lib/*.jar" />
    </path>
    <path id="pmd.lib">
        <fileset dir="${pmd.home}" includes="lib/*.jar" />
    </path>
	
    <target depends="findbugs,pmd" name="analysis" />
	
    <available property="checkstyleok" file="${checkstyle.home}" type="dir"/>
    <target name="checkstyle" if="checkstyleok">
        <taskdef resource="checkstyletask.properties" classpathref="checkstyle.lib"/>
        <checkstyle config="checkStyle.xml" failOnViolation="false">
            <fileset dir="${basedir}/src" includes="**/*.java"/>
            <formatter type="xml" toFile="build/checkstyle-result.xml"/>
        </checkstyle>
    </target>
	
    <available property="findbugsok" file="${findbugs.home}" type="dir"/>
    <target name="findbugs" if="findbugsok">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.lib"/>
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="build/findbugs.xml"
                  excludefilter="findbugsFilter.xml">
            <sourcePath path="${basedir}/src" />
            <class location="${basedir}/build/classes"/>
        </findbugs>
    </target>

    <available property="pmdok" file="${pmd.home}" type="dir"/>
    <target name="pmd" if="pmdok">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.lib"/>
        <pmd shortFilenames="true">
            <ruleset>java-basic,java-braces,java-clone,java-codesize,java-comments</ruleset>
            <ruleset>java-controversial,java-coupling,java-design,java-empty,java-finalizers</ruleset>
            <ruleset>java-imports,java-j2ee,java-javabeans,java-migrating,java-naming</ruleset>
            <ruleset>java-optimizations,java-strictexception,java-strings,java-sunsecure</ruleset>
            <ruleset>java-typeresolution,java-unnecessary,java-unusedcode</ruleset>
            <formatter type="xml" toFile="build/pmd.xml"/>
            <fileset dir="${basedir}/src">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
	
    <target name="cpd" if="pmdok">
        <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmd.lib"/>
        <cpd minimumTokenCount="100" outputFile="build/cpd.xml" encoding="UTF-8" format="xml">
            <fileset dir="${basedir}/src">
                <include name="**/*.java"/>
            </fileset>
        </cpd>
    </target>

</project>
