--銷售通路
CREATE TABLE SK_SALES_CHANNELS
(
	ID NUMBER(18) NOT NULL ENABLE,
	CODE VARCHAR2(20 BYTE),
	NAME VARCHAR2(70 CHAR),
	PARENT NUMBER(18),
	MANAGER NUMBER(18),
	CONSTRAINT SK_SALES_CHANNELS_PK PRIMARY KEY (ID),
	CONSTRAINT SK_SALES_CHANNELS_UK UNIQUE (CODE),
	CONSTRAINT SK_SALES_CHANNELS_FK1 FOREIGN KEY (PARENT) REFERENCES SK_SALES_CHANNELS(ID),
	CONSTRAINT SK_SALES_CHANNELS_FK2 FOREIGN KEY (manager) REFERENCES TC_USER(ID)
)
/
--銷售群駔
CREATE TABLE SK_SALES_MEMBER
(
	ID NUMBER(18) NOT NULL ENABLE,
	CODE VARCHAR2(20 BYTE),
	NAME VARCHAR2(70 CHAR),
	member NUMBER(18),
	selectable NUMBER(1) default 1,
	CONSTRAINT SK_SALES_MEMBER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_SALES_MEMBER_UK UNIQUE (CODE),
	CONSTRAINT SK_SALES_MEMBER_FK1 FOREIGN KEY (member) REFERENCES TC_USER(ID)

)
/
CREATE TABLE SK_SALES_CHANNEL_MEMBER
(
	ID NUMBER(18) NOT NULL ENABLE,
	sales_channel NUMBER(18),
	sales_member NUMBER(18),
	CONSTRAINT SK_SALES_CHANNEL_MEMBER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_SALES_CHANNEL_MEMBER_UK UNIQUE (sales_channel,sales_member),
	CONSTRAINT SK_SALES_CHANNEL_MEMBER_FK1 FOREIGN KEY (sales_channel) REFERENCES SK_SALES_CHANNELS(ID),
	CONSTRAINT SK_SALES_CHANNEL_MEMBER_FK2 FOREIGN KEY (sales_member) REFERENCES SK_SALES_MEMBER(ID)

)
/
--Customer table, get from sap that background or ETL to do migration
CREATE TABLE SK_CUSTOMER
(	
    ID NUMBER(18) NOT NULL ENABLE, --流水號
	CODE VARCHAR2(20 BYTE), --客戶代碼
	SIMPLE_CODE VARCHAR2(20 BYTE), --客戶簡易代碼
	VAT VARCHAR2(20 BYTE), --統一編號
	NAME VARCHAR2(70 CHAR), --客戶名稱
	SAPID VARCHAR2(8 BYTE), --銷售群組
	PAYMENT_TERM VARCHAR2(4 BYTE), --付款方式
	CURRENCY VARCHAR2(5 BYTE), --幣別
	ZIP_CODE VARCHAR2(5 BYTE),
	CITY VARCHAR2(40 CHAR),
	STREET VARCHAR2(60 CHAR),
	SHIPPING_CONDITION VARCHAR2(20 BYPTE),
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	CONSTRAINT SK_CUSTOMER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_CUSTOMER_UK UNIQUE (CODE),
	CONSTRAINT SK_CUSTOMER_FK1 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_CUSTOMER_FK2 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID)
)
/
CREATE TABLE SK_Advance_REMIT
(
	ID NUMBER(18) NOT NULL ENABLE,
	customer NUMBER(18),
	AMOUNT number(15,2),--�`���B
	REMIT_timestamp date,
	REMIT_type VARCHAR2(30 byte),
	customer_number VARCHAR2(20 BYTE), -- temp
	--REMIT_date VARCHAR2(10 byte), -- temp
	CREATETIMESTAMP DATE default sysdate,
	CONSTRAINT SK_Advance_REMIT_PK PRIMARY KEY (ID),
	CONSTRAINT SK_Advance_REMIT_FK1 FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID)
)
/
CREATE TABLE SK_BANK
(
	ID NUMBER(18) NOT NULL ENABLE,
	code VARCHAR2(16 byte),--�Ȧ�N��
	name VARCHAR2(128 char),--�Ȧ�W��
	CREATETIMESTAMP DATE,
	CONSTRAINT SK_BANK_PK PRIMARY KEY (ID)
)
/
--SP sales order table , get from sap that background or ETL to do migration
create table SK_SALES_ORDER
(
	ID NUMBER(18) NOT NULL ENABLE,
	order_number VARCHAR2(30 BYTE),
	order_timestamp date,
	Invoice_number VARCHAR2(10 BYTE),
	invoice_timestamp date,
	invoice_date VARCHAR2(10 byte), -- temp
	customer_number VARCHAR2(20 BYTE), -- temp
	customer NUMBER(18),
	--product_number VARCHAR2(18 BYTE),
	amount number(15,2),--總金額
	--Premium_discount number(15,2),--溢價折讓未稅
	--Premium_discount_tax number(13,2),--溢價折讓稅金
	--SAPID VARCHAR2(8 BYTE), --銷售群組
	order_date VARCHAR2(10 byte), -- temp
	CONSTRAINT SK_SALES_ORDER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_SALES_ORDER_FK1 FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID)
)
/
create table SK_SALES_ORDER_DETAIL
(
	ID NUMBER(18) NOT NULL ENABLE,
	sales_order NUMBER(18) ,
	product_number VARCHAR2(18 BYTE),
	Premium_discount number(15,2),--溢價折讓未稅
	Premium_discount_tax number(13,2),--溢價折讓稅金
	CONSTRAINT SK_SALES_ORDER_DETAIL_PK PRIMARY KEY (ID),
	CONSTRAINT SK_SALES_ORDER_DETAIL_FK1 FOREIGN KEY (sales_order) REFERENCES SK_SALES_ORDER(ID)
)
/
--溢價折讓主檔
CREATE TABLE "SK_PREMIUM_DISCOUNT"
(
"ID"                NUMBER(18) NOT NULL ENABLE,
"ORDER_NUMBER"      VARCHAR2(30 BYTE) NOT NULL ENABLE,
"INVOICE_NUMBER"    VARCHAR2(10 BYTE) NOT NULL ENABLE,
"INVOICE_TIMESTAMP" DATE,
"CUSTOMER"          NUMBER(18) NOT NULL,
"DISCOUNT"            NUMBER (15,2) DEFAULT 0 NOT NULL ,
"TAX"               NUMBER (15,2) DEFAULT 0 NOT NULL ,
"UPLOAD_TIMESTAMP"  DATE,
"YEAR"              VARCHAR2(4) NOT NULL,
"MONTH"             VARCHAR2(2) NOT NULL,
"CREATOR"           NUMBER(18), 
"CREATETIMESTAMP"   DATE,
"MODIFIER"          NUMBER(18) , 
"MODIFYTIMESTAMP"   DATE,
"RETURN_CODE"       VARCHAR2(255),
"ERROR_MESSAGE"     VARCHAR2(4000),
CONSTRAINT "SK_PREMIUM_DISCOUNT_PK" PRIMARY KEY (ID),
CONSTRAINT "SK_PREMIUM_DISCOUNT_FK1" FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
CONSTRAINT "SK_PREMIUM_DISCOUNT_FK2" FOREIGN KEY (MODIFIER) REFERENCES TC_USER(ID),
CONSTRAINT "SK_PREMIUM_DISCOUNT_FK3" FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID)
);

COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."ID" IS 'PK';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."ORDER_NUMBER" IS '訂單編號';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."INVOICE_NUMBER" IS '發票號碼';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."INVOICE_TIMESTAMP" IS '發票日期';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."CUSTOMER" IS 'FK:SK_CUSTOMER.ID';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."DISCOUNT" IS '未稅折讓';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."TAX" IS '折讓稅金';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."UPLOAD_TIMESTAMP" IS '上傳時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."YEAR" IS '年';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."MONTH" IS '月';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."CREATOR" IS 'FK:TC_USER.ID';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."CREATETIMESTAMP" IS '建立時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."MODIFIER" IS 'FK:TC_USER.ID';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."MODIFYTIMESTAMP" IS '修改時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."RETURN_CODE" IS '錯誤代碼';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."ERROR_MESSAGE" IS '錯誤訊息';
COMMENT ON COLUMN "SK_SP_USER"."SK_PREMIUM_DISCOUNT"."ORDER_NUMBER" IS '訂單編號';
--AR table , get from sap that background or ETL to do migration

CREATE TABLE "SK_SALES_ALLOWANCE_LOG"
(
"ID" NUMBER(18) NOT NULL ENABLE,
"SALES_ORDER_MASTER_ID" NUMBER(18) NOT NULL ENABLE,
"CREATOR"	NUMBER(18),
"CREATETIMESTAMP" DATE,
CONSTRAINT "SK_ALLOWANCE_LOG_PK" PRIMARY KEY("ID"),
CONSTRAINT "SK_ALLOWANCE_LOG_FK1" FOREIGN KEY ("SALES_ORDER_MASTER_ID") REFERENCES SK_SALES_ORDER_MASTER("ID"),
CONSTRAINT "SK_ALLOWANCE_LOG_FK2" FOREIGN KEY ("CREATOR") REFERENCES TC_USER("ID")
);

COMMENT ON COLUMN "SK_SP_USER"."SK_SALES_ALLOWANCE_LOG"."ID" IS 'PK';
COMMENT ON COLUMN "SK_SP_USER"."SK_SALES_ALLOWANCE_LOG"."SALES_ORDER_MASTER_ID" IS 'FK:SK_SALES_ORDER_MASTER.ID';
COMMENT ON COLUMN "SK_SP_USER"."SK_SALES_ALLOWANCE_LOG"."CREATOR" IS 'FK:TC_USER.ID';
COMMENT ON COLUMN "SK_SP_USER"."SK_SALES_ALLOWANCE_LOG"."CREATETIMESTAMP" IS '建立時間';

create table SK_Accounts_Receivable
(
	ID NUMBER(18) NOT NULL ENABLE,
	customer  NUMBER(18),
	order_number VARCHAR2(30 BYTE),
	Invoice_number VARCHAR2(10 BYTE),
	invoice_timestamp date,
	amount number(15,2),--應收帳款
	Premium_discount number(15,2),--溢價折讓
	SAPID VARCHAR2(10),--銷售群組
	ar_due_date date,--應收到期
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	customer_NUMBER VARCHAR2(20 byte),
	CONSTRAINT SK_Accounts_Receivable_PK PRIMARY KEY (ID),
	CONSTRAINT SK_Accounts_Receivable_UK UNIQUE (ID,order_number),
	CONSTRAINT SK_Accounts_Receivable_FK1 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_Accounts_Receivable_FK2 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID),
	CONSTRAINT SK_Accounts_Receivable_FK3 FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID)
)
/
--解繳主檔
CREATE TABLE SK_AR_REMIT_MASTER
(
	ID NUMBER(18) NOT NULL ENABLE,
	--remit_id VARCHAR2(20 BYTE),
	customer  NUMBER(18),
	SAPID VARCHAR2(10),--銷售群組
	bank VARCHAR2(20 BYTE),--銀行	
	Remittance_amount NUMBER(15,2), --現金金額
	check_amount NUMBER(15,2) , --支票金額
	finance_reviewer NUMBER(18),
	status VARCHAR2(60 BYTE), --NOT YET,REVIEWED,TRANSFER_SAP,TRANSFER_OK,TRANSFER_FAILED
	review_timestamp DATE,
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	CONSTRAINT SK_AR_REMIT_MASTER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_AR_REMIT_MASTER_FK1 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_AR_REMIT_MASTER_FK2 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID),
	CONSTRAINT SK_AR_REMIT_MASTER_FK3 FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID)
	--CONSTRAINT SK_AR_REMIT_MASTER_UK UNIQUE (remit_id)
)
/
--解繳明細主檔
CREATE TABLE SK_AR_REMIT_ITEM
(
	ID NUMBER(18) NOT NULL ENABLE,
	--Accounts_Receivable  NUMBER(18),
	order_number VARCHAR2(30 BYTE),
	Invoice_number VARCHAR2(10 BYTE),
	invoice_timestamp date,
	ar_amount number(15,2),--應收帳款
	Premium_discount number(15,2) ,--溢價折讓
	ar_due_date date,--應收到期	
	AR_REMIT_MASTER  NUMBER(18),
	remit_type VARCHAR2(20 BYTE),--銷貨折讓,銷貨退回,-AR,尾差/手續費,預收,現金(匯款)/支票
	sales_discount number(15,2), --銷貨折讓
	sales_return number(15,2), --銷貨退回
    negative_ar number(15,2), ---AR
	difference_charge NUMBER(3), --尾差/手續費
	advance_receipts_a number(15,2), --預收A
	advance_receipts_j number(15,2), --預收J
	payment_type VARCHAR2(20 BYTE),--現金/支票
	check_number VARCHAR2(20 BYTE),--支票號碼
	amount NUMBER(15,2), --金額
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	CONSTRAINT SK_AR_REMIT_item_PK PRIMARY KEY (ID),
	CONSTRAINT SK_AR_REMIT_item_FK1 FOREIGN KEY (AR_REMIT_MASTER) REFERENCES SK_AR_REMIT_MASTER(ID),
	--CONSTRAINT SK_AR_REMIT_item_FK2 FOREIGN KEY (Accounts_Receivable) REFERENCES SK_Accounts_Receivable(ID),
	CONSTRAINT SK_AR_REMIT_item_FK3 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_AR_REMIT_item_FK4 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID)
)
/

--解繳明細上傳檔
CREATE TABLE SK_AR_REMIT_INTERFACE
(
	"ID" 				NUMBER(18) NOT NULL ENABLE,
	"BANK_CODE" 		VARCHAR2(20),
	"ORDER_NUMBER" 		VARCHAR2(30),
	"INVOICE_NUMBER"	VARCHAR2(10),
	"NOTE"				VARCHAR2(200),
	"CUSTOMER"			VARCHAR2(20),
	"TYPE"				VARCHAR2(10),
	"PROPERTY"			VARCHAR2(10),
	"HKONT"				VARCHAR2(10),
	"AMOUNT_NTD"		NUMBER(15,2),
	"CURRENCY"			VARCHAR2(5),
	"AMOUNT"			NUMBER(15,2),
	"CHECK_BANK"		VARCHAR2(128),
	"CHECK_ACCOUNT"		VARCHAR2(20),
	"CHECK_NUMBER"		VARCHAR2(20),
	"CHECK_CREATETMIESTAMP" DATE,
	"CHECK_DUE_DATE"	DATE,
	"CHECK_AMOUNT"		NUMBER(15,2),
	"SPLIT_SERNR"		VARCHAR2(10),
	"SPLIT_END"			VARCHAR2(1),
	"CREDIT_AREA"		VARCHAR2(20),
	"BUS_AREA"			VARCHAR2(20),
	"SGTXT"				VARCHAR2(255),
	"BUPLA"				VARCHAR2(20),
	"VKGRP"				VARCHAR2(3),
	"CREATETIMESTAMP"	DATE,
	"CREATOR"			NUMBER(18),
	"MODIFYTIMESTAMP"	DATE,
	"MODIFIER"			NUMBER(18),
	"UPLOAD_TIMESTAMP"	DATE,
	"UPLOADER"			NUMBER(18),
	PRIMARY KEY("ID")
);

COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."ID" IS 'PK';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."BANK_CODE" IS '銀行代碼';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."ORDER_NUMBER" IS '訂單編號';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."INVOICE_NUMBER" IS '發票號碼';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."NOTE" IS 'XX款註記';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CUSTOMER" IS '客戶編號';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."TYPE" IS '交易類別';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."PROPERTY" IS '交易性質';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."HKONT" IS '總帳科目';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."AMOUNT_NTD" IS '應收沖帳金額(台幣)';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CURRENCY" IS '幣別';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."AMOUNT" IS '應收沖帳金額(原幣)';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_BANK" IS '開票銀行';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_ACCOUNT" IS '開票帳戶';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_NUMBER" IS '票據號碼';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_CREATETMIESTAMP" IS '開票日期';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_DUE_DATE" IS '票據到期日';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CHECK_AMOUNT" IS '票據(或現金)沖多筆帳款的總金額';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."SPLIT_SERNR" IS '票據分割序號';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."SPLIT_END" IS '票據(或現金)分割結束';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CREDIT_AREA" IS '信控範圍';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."BUS_AREA" IS '業務範圍';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."SGTXT" IS '說明';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."BUPLA" IS '營業處';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."VKGRP" IS '銷售群組';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CREATETIMESTAMP" IS '建立時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."CREATOR" IS '建立者';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."MODIFYTIMESTAMP" IS '修改時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."MODIFIER" IS '修改者';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."UPLOAD_TIMESTAMP" IS '上傳時間';
COMMENT ON COLUMN "SK_SP_USER"."SK_AR_REMIT_INTERFACE"."UPLOADER" IS '上傳者';

--解繳明細支票號碼
--CREATE TABLE SK_AR_REMIT_item_CHECK
--(
--	ID NUMBER(18) NOT NULL ENABLE,
--	AR_REMIT_item  NUMBER(18),
--	check_number VARCHAR2(20 BYTE),--支票號碼
--	CREATOR NUMBER(18) , 
--	CREATETIMESTAMP DATE,
--	Modifier NUMBER(18) , 
--	Modifytimestamp DATE,
--	CONSTRAINT SK_AR_REMIT_item_CHECK_PK PRIMARY KEY (ID),
--	CONSTRAINT SK_AR_REMIT_item_CHECK_FK1 FOREIGN KEY (AR_REMIT_item) REFERENCES SK_AR_REMIT_item(ID),
--    CONSTRAINT SK_AR_REMIT_item_CHECK_FK2 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
--	CONSTRAINT SK_AR_REMIT_item_CHECK_FK3 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID)
--)
--/
--解繳明細匯款銀行
--CREATE TABLE SK_AR_REMIT_ITEM_BANK
--(
--	ID NUMBER(18) NOT NULL ENABLE,
--	AR_REMIT_item  NUMBER(18),
--	BANK VARCHAR2(20 BYTE),--銀行
--	CREATOR NUMBER(18) , 
--	CREATETIMESTAMP DATE,
--	Modifier NUMBER(18) , 
--	Modifytimestamp DATE,
--	CONSTRAINT SK_AR_REMIT_ITEM_BANK_PK PRIMARY KEY (ID),
--	CONSTRAINT SK_AR_REMIT_ITEM_BANK_FK1 FOREIGN KEY (AR_REMIT_item) REFERENCES SK_AR_REMIT_item(ID),
--	CONSTRAINT SK_AR_REMIT_ITEM_BANK_FK2 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
--	CONSTRAINT SK_AR_REMIT_ITEM_BANK_FK3 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID)
--)
--/
CREATE TABLE SK_CHECK_MASTER
(
	ID NUMBER(18) NOT NULL ENABLE,
	check_number VARCHAR2(20 BYTE),--支票號碼
	customer  NUMBER(18),
	due_date date,
	--Billing_bank VARCHAR2(60 BYTE),
	Billing_bank NUMBER(18),
	Billing_account VARCHAR2(20 BYTE),
	AMOUNT number(15,2),
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	CONSTRAINT SK_CHECK_MASTER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_CHECK_MASTER_FK1 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_CHECK_MASTER_FK2 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID),
	CONSTRAINT SK_CHECK_MASTER_FK3 FOREIGN KEY (CUSTOMER) REFERENCES SK_CUSTOMER(ID),
	CONSTRAINT SK_CHECK_MASTER_FK4 FOREIGN KEY (Billing_bank) REFERENCES SK_BANK(ID)
)
/
--產品主檔
CREATE TABLE SK_PRODUCT_MASTER
(
	ID NUMBER(18) NOT NULL ENABLE,
	CODE VARCHAR2(18 BYTE), --產品編號
	NAME VARCHAR2(64 CHAR), --產品名稱
	CREATOR NUMBER(18) , 
	CREATETIMESTAMP DATE,
	Modifier NUMBER(18) , 
	Modifytimestamp DATE,
	CONSTRAINT SK_PRODUCT_MASTER_PK PRIMARY KEY (ID),
	CONSTRAINT SK_PRODUCT_MASTER_FK1 FOREIGN KEY (CREATOR) REFERENCES TC_USER(ID),
	CONSTRAINT SK_PRODUCT_MASTER_FK2 FOREIGN KEY (Modifier) REFERENCES TC_USER(ID)
)
/
--應收帳款檔--sap
CREATE TABLE ZBSEGAR(
  ACTNAME VARCHAR2(12 char),
  KUNNR VARCHAR2(10 BYTE),
  SGTXT VARCHAR2(30 BYTE),
  ZUONR VARCHAR2(18 BYTE),
  HZUON VARCHAR2(18 BYTE),
  BLDAT VARCHAR2(10 BYTE),
  FDWBT NUMBER,
  VSBED VARCHAR2(10 BYTE),
  GJAHR VARCHAR2(4 char),
  MONAT VARCHAR2(2 char),
  UPDAT VARCHAR2(10 BYTE),
  FDTAG VARCHAR2(10 BYTE)
)
/
--customer--sap
create table ZKNA1 (							
	KUNNR		varchar2	(	10	byte	),
	NAME1		varchar2	(	64	 char	),
	SORTL		varchar2	(	10	byte	),
	STCEG		varchar2	(	16	byte	),
	POST_CODE1		varchar2	(	10	byte	),
	CITY1		varchar2	(	64	 char	),
	STREET		varchar2	(	64	 char	),
	STR_SUPPL3		varchar2	(	64	 char	),
	NAME4		varchar2	(	64	 char	),
	TELF1		varchar2	(	16	byte	),
	KONZS		varchar2	(	10	byte	),
	BAHNE		varchar2	(	32	 char	),
	KUKLA		varchar2	(	2	byte	),
	BZIRK		varchar2	(	8	byte	),
	VKGRP		varchar2	(	4	byte	),
	KDGRP		varchar2	(	2	byte	),
	WAERS		varchar2	(	8	byte	),
	KALKS		varchar2	(	1	 char	),
	LPRIO		varchar2	(	2	byte	),
	VSBED		varchar2	(	2	byte	),
	ZTERM		varchar2	(	4	byte	),
	UPDAT		varchar2	(	10	byte	),
	ERDAT		varchar2	(	10	byte	),
	CREATETIMESTAMP		date				,
	Modifytimestamp		date				
)							
/
--預收檔		
create table ZBSEGPP(							
	ACTNAME			varchar2(	12	char	),
	UMSKZ			varchar2(	1	byte	),
	KUNNR			varchar2(	10	byte	),
	FDWBT					number	,
	PERNR			varchar2(	10	byte	),
	HZUON			varchar2(	18	byte	),
	GJAHR			varchar2(	4	char	),
	MONAT			varchar2(	2	char	),
	UPDAT			varchar2(	10	byte	),
	FDTAG			varchar2(	10	byte	)
)
/
--Sales Order from sap
create table ZVBRK(
SKSALEID number
, FKART varchar2(	4	char	)
, VBELN varchar2(	10	char	)
, XBLNR varchar2(	16	char	)
, FKDAT varchar2(	10	char	)
, KUNRG varchar2(	10	char	)
, KUNAG varchar2(	10	char	)
, NETWR number
, VKORG varchar2(	4	char	)
, VTWEG varchar2(	2	char	)
, AUGDT varchar2(	10	char	)
, POSNR number
, UEPOS number
, VKGRP varchar2(	4	char	)
, MATNR varchar2(	18	char	)
, LGORT varchar2(	4	char	)
, CHARG varchar2(	10	char	)
, VRKME varchar2(	4	char	)
, FKIMG number
, KBETR number
, NETWR1 number
, PSTYV varchar2(	4	char	)
, NETWR2 number
, MWSBP number
, WAVWR number
, AUBEL varchar2(	16	char	)
, AUPOS number
, VGBEL2 varchar2(	10	char	)
, VGPOS number
, VBELN2 varchar2(	10	char	)
, POSNR2 number
, AUDAT varchar2(	10	char	)
, AUART varchar2(	4	char	)
, VGBEL varchar2(	10	char	)
, PERNR number
, ERDAT varchar2(	10	char	)
, LTEXT varchar2(	1024	char	)
, NETWR33 number
, MWSBP33 number
, NETWR3 number
, MWSBP3 number
, AUGRU varchar2(	16	char	)
, VGBEL3 varchar2(	16	char	)
, WKTPS varchar2(	16	char	)
, RETURN_RATE number
, CHECK_DATE varchar2(	8	char	)
, CHECK_ID varchar2(	50	char	)
)
/
--產品主檔
CREATE TABLE ZMARA
(
  MATNR VARCHAR2(18 byte)
, ARKTX VARCHAR2(64 byte)
, MAKTX VARCHAR2(64 byte)
, MEINS VARCHAR2(8 byte)
, WRKST1 VARCHAR2(64 byte)
, ZEIFO VARCHAR2(4 byte)
, WRKST2 VARCHAR2(64 byte)
, MATKL VARCHAR2(10 byte)
, SPART VARCHAR2(2 byte)
, ZEINR VARCHAR2(32 byte)
, BISMT VARCHAR2(32 byte)
, MEINH VARCHAR2(8 byte)
, UMREN NUMBER(12,2)
, LAEDA VARCHAR2(10 byte)
, ERSDA VARCHAR2(10 byte)
)
/
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (11,'gn24e','邱忠義',1,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (12,'jeff.shay','薛統旗',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (13,'wade.hught','黃企琮',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (14,'polly.liu','劉辰萱',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (15,'wsp68,'王勝平',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (16,'andy1516','楊玉璽',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (17,'patrick.kuan','官重信',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (18,'aaron.zou','鄒子健',null,sysdate);
Insert into TC_USER (ID,LOGIN_ACCOUNT,CNAME,CREATOR,CREATETIMESTAMP) values (19,'bogi05','劉伯禹',null,sysdate);
INSERT INTO TC_GROUP (ID,CODE,NAME,CREATOR,CREATETIMESTAMP) VALUES (1,'ADMINISTRATORS','Administrators Group',2,sysdate);
INSERT INTO TC_GROUP (ID,CODE,NAME,CREATOR,CREATETIMESTAMP) VALUES (2,'Finance','Finance Group',2,sysdate);
INSERT INTO TC_GROUP (ID,CODE,NAME,CREATOR,CREATETIMESTAMP) VALUES (3,'Sales','Sales Group',2,sysdate);
INSERT INTO TC_GROUP (ID,CODE,NAME,CREATOR,CREATETIMESTAMP) VALUES (4,'Assistant','Assistant Group',2,sysdate);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (11,11,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (12,12,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (13,13,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (14,14,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (15,15,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (16,16,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (17,17,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (18,18,3,2,SYSDATE);
INSERT INTO TC_USERGROUP (ID,USER_ID,GROUP_ID,CREATOR,CREATETIMESTAMP) VALUES (19,19,3,2,SYSDATE);
insert into SK_SALES_CHANNELS (ID,CODE,NAME,PARENT,MANAGER)values(2,'02','業務部開業醫北二區',null,17);
insert into SK_SALES_CHANNELS (ID,CODE,NAME,PARENT,MANAGER)values(1,'01','業務部開業醫北一區',2,11);
insert into SK_SALES_MEMBER (ID,CODE,member)values(1,'010',11);
insert into SK_SALES_MEMBER (ID,CODE,member)values(2,'011',12);
insert into SK_SALES_MEMBER (ID,CODE,member)values(3,'012',13);
--insert into SK_SALES_MEMBER (ID,CODE,member)values(4,'013',);
insert into SK_SALES_MEMBER (ID,CODE,member)values(5,'014',14);
insert into SK_SALES_MEMBER (ID,CODE,member)values(6,'015',15);
insert into SK_SALES_MEMBER (ID,CODE,member)values(7,'016',16);
insert into SK_SALES_MEMBER (ID,CODE,member)values(8,'023',18);
insert into SK_SALES_MEMBER (ID,CODE,member)values(9,'024',19);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(1,1,1);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(2,1,2);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(3,1,3);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(4,1,4);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(5,1,5);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(6,1,6);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(7,1,7);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(8,2,8);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(9,2,9);

insert into SK_SALES_MEMBER (ID,CODE,member)values(101,'X01',2);
insert into SK_SALES_MEMBER (ID,CODE,member)values(102,'X02',3);
insert into SK_SALES_MEMBER (ID,CODE,member)values(103,'X03',4);

insert into SK_SALES_CHANNELS (ID,CODE,NAME,PARENT,MANAGER)values(101,'X1','Channel Test1',null,2);
insert into SK_SALES_CHANNELS (ID,CODE,NAME,PARENT,MANAGER)values(102,'X2','Channel Test2',null,3);
insert into SK_SALES_CHANNELS (ID,CODE,NAME,PARENT,MANAGER)values(103,'X3','Channel Test3',null,4);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(8,101,1);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(9,101,2);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(10,101,3);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(11,101,5);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(12,101,6);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(13,101,7);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(14,102,1);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(15,102,2);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(16,102,3);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(17,102,5);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(18,102,6);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(19,102,7);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(20,103,1);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(21,103,2);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(22,103,3);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(23,103,5);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(24,103,6);
insert into SK_SALES_CHANNEL_MEMBER(ID,sales_channel,sales_member)values(25,103,7);
