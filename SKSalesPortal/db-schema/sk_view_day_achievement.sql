CREATE or REPLACE view V_CAL_SALES_DAY_ACHIEVEMENT AS 
SELECT t1.sapid, t1.INVOICE_TIMESTAMP, t1.AMOUNT,t1.TAX,t1.COST 
	,t1.PREMIUM_DISCOUNT, t1.PREMIUM_DISCOUNT_TAX 
	,t1.SALES_DISCOUNT,t1.SALES_DISCOUNT_TAX 
	,t1.SALES_RETURN
	,t2.BUDGET 
	,(t1.AMOUNT - t1.PREMIUM_DISCOUNT - t1.SALES_DISCOUNT - t1.SALES_RETURN) as SALES_AMOUNT
	,t1.CONTRACT_AMOUNT 
	,t1.CONTRACT_COST 
	,0 as return_cost
	,0 as return_amount
FROM 
(
	SELECT t1.sapid, t1.INVOICE_TIMESTAMP, t1.AMOUNT,t1.TAX,t1.COST 
	,t1.PREMIUM_DISCOUNT, t1.PREMIUM_DISCOUNT_TAX 
	,t1.SALES_DISCOUNT,t1.SALES_DISCOUNT_TAX 
	,t1.SALES_RETURN
	,NVL(t2.CONTRACT_AMOUNT,0) as CONTRACT_AMOUNT
	,NVL(t2.CONTRACT_COST,0) as CONTRACT_COST 	
	FROM 
	(
		--Sales Order銷售,議價折讓,事後折讓 join 退貨
		SELECT t1.sapid, t1.INVOICE_TIMESTAMP, t1.AMOUNT,t1.TAX,t1.COST 
		,NVL(t1.PREMIUM_DISCOUNT,0) as PREMIUM_DISCOUNT ,NVL(t1.PREMIUM_DISCOUNT_TAX,0) as PREMIUM_DISCOUNT_TAX 
		,NVL(t1.SALES_DISCOUNT,0) as SALES_DISCOUNT ,NVL(t1.SALES_DISCOUNT_TAX,0) as SALES_DISCOUNT_TAX
		,NVL(t4.SALES_RETURN,0) as SALES_RETURN
		FROM 
		(
			--Sales Order銷售,議價折讓 join 事後折讓
			SELECT t1.sapid, t1.INVOICE_TIMESTAMP, t1.AMOUNT,t1.TAX,t1.COST
			,t1.PREMIUM_DISCOUNT, t1.PREMIUM_DISCOUNT_TAX
			,t3.SALES_DISCOUNT,t3.SALES_DISCOUNT_TAX 
			FROM
			( 
				--Sales Order銷售 join 議價折讓
				SELECT t1.sapid, t1.INVOICE_TIMESTAMP, t1.AMOUNT,t1.TAX,t1.COST
				,t2.PREMIUM_DISCOUNT, t2.PREMIUM_DISCOUNT_TAX 
				FROM
				(
					--Sales Order銷售
					select t.sapid,t.INVOICE_TIMESTAMP,SUM(t.RETURN_AMOUNT) as AMOUNT, SUM(t.RETURN_AMOUNT_TAX) as TAX,SUM(t.COST) as COST  
					FROM SK_SALES_DETAILS t 
					WHERE 
					--to_char(t.INVOICE_TIMESTAMP,'YYYYMM')='201202' AND 
					(
					t.BILLING_TYPE like 'ZF%' 
					or t.BILLING_TYPE like 'ZL%'
					) 
					GROUP BY t.sapid,t.INVOICE_TIMESTAMP 
				) t1,
				(
					--議價折讓
					select t.sapid,t.INVOICE_TIMESTAMP, SUM(t.PREMIUM_DISCOUNT) as PREMIUM_DISCOUNT, SUM(t.PREMIUM_DISCOUNT_TAX) as PREMIUM_DISCOUNT_TAX 
					FROM SK_SALES_DETAILS t 
					WHERE 
					--to_char(t.INVOICE_TIMESTAMP,'YYYYMM')='201202' AND 
					t.BILLING_TYPE like 'ZF%' 
					GROUP BY t.sapid,t.INVOICE_TIMESTAMP 
				) t2 
				WHERE 
				t1.sapid = t2.sapid(+) and t1.INVOICE_TIMESTAMP = t2.INVOICE_TIMESTAMP(+)
			) t1,
			(
				--事後折讓
				select t.sapid,t.INVOICE_TIMESTAMP, SUM(t.RETURN_AMOUNT) as SALES_DISCOUNT, SUM(t.RETURN_AMOUNT_TAX) as SALES_DISCOUNT_TAX 
				FROM SK_SALES_DETAILS t 
				WHERE 
				--to_char(t.INVOICE_TIMESTAMP,'YYYYMM')='201202' AND 
				t.BILLING_TYPE like 'ZG%' 
				GROUP BY t.sapid,t.INVOICE_TIMESTAMP 
			) t3 
			WHERE 
			t1.sapid = t3.sapid(+) and t1.INVOICE_TIMESTAMP = t3.INVOICE_TIMESTAMP(+)
		) t1,
		(
			--退貨
			select t.sapid,t.INVOICE_TIMESTAMP, 
			SUM(t.RETURN_RATE * 
			CASE c.pricing_program WHEN '1' then t.AMOUNT else t.AMOUNT * 1.05 END
			) SALES_RETURN 
			FROM SK_SALES_DETAILS t,SK_CUSTOMER c 
			WHERE 
			--to_char(t.INVOICE_TIMESTAMP,'YYYYMM')='201202' AND 
			t.BILLING_TYPE = 'ZRE' AND
			t.PAYER_CUSTOMER=c.CODE 
			GROUP BY t.sapid,t.INVOICE_TIMESTAMP 
		) t4 
		WHERE 
		t1.sapid = t4.sapid(+) and t1.INVOICE_TIMESTAMP = t4.INVOICE_TIMESTAMP(+) 
	) t1,
	--合約
	(
		select t1.INVOICE_TIMESTAMP, t1.SAPID,SUM(t1.CONTRACT_AMOUNT) as CONTRACT_AMOUNT, SUM( t1.CONTRACT_AMOUNT / t2.CONTRACT_TARGET* t2.CONDITION_VALUE) as CONTRACT_COST
		from 
			(select t.INVOICE_TIMESTAMP, t.SAPID, t.CONTRACT_NUMBER,SUM(AMOUNT - PREMIUM_DISCOUNT - PREMIUM_DISCOUNT_TAX) CONTRACT_AMOUNT
			FROM
				(select t.sapid,t.INVOICE_NUMBER,t.INVOICE_TIMESTAMP,NVL(t.AMOUNT,0) as AMOUNT , NVL(t.PREMIUM_DISCOUNT,0) as PREMIUM_DISCOUNT, NVL(t.PREMIUM_DISCOUNT_TAX,0) as PREMIUM_DISCOUNT_TAX , t.CONTRACT_NUMBER
				FROM SK_SALES_DETAILS t 
				WHERE 
				--to_char(t.INVOICE_TIMESTAMP,'YYYYMM')='201202' AND 
				(
				t.BILLING_TYPE like 'ZF%' 
				or t.BILLING_TYPE like 'ZL%'
				)) t 
			WHERE t.CONTRACT_NUMBER like '196%' 
			GROUP BY t.INVOICE_NUMBER, t.INVOICE_TIMESTAMP, t.SAPID, t.CONTRACT_NUMBER
			) t1,
		SK_CONTRACT t2 
		WHERE t1.CONTRACT_NUMBER=t2.CODE 
		GROUP BY t1.INVOICE_TIMESTAMP,t1.SAPID
	) t2 
	WHERE 
	t1.INVOICE_TIMESTAMP = t2.INVOICE_TIMESTAMP(+) and t1.SAPID = t2.SAPID(+)	
) t1,
(
	SELECT t.sapid,t.BUDGET,t.BASELINE_TIMESTAMP 
	FROM SK_BUDGET t
	--WHERE to_char(t.BASELINE_TIMESTAMP,'YYYYMM')='201202'
) t2 
WHERE 
t1.sapid = t2.sapid and trunc(t1.invoice_timestamp,'MONTH') = trunc(t2.BASELINE_TIMESTAMP,'MONTH')
